/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './solution.module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from './solution.service';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '@angular/http/src/http';
import * as import8 from '../flash-message/flash-messages.service';
class SolutionModuleInjector extends import0.NgModuleInjector<import1.SolutionModule> {
  _CommonModule_0:import2.CommonModule;
  _SolutionModule_1:import1.SolutionModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  __SolutionService_3:import4.SolutionService;
  constructor(parent:import5.Injector) {
    super(parent,[],[]);
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == (null as any))) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  get _SolutionService_3():import4.SolutionService {
    if ((this.__SolutionService_3 == (null as any))) { (this.__SolutionService_3 = new import4.SolutionService(this.parent.get(import7.Http),this.parent.get(import8.FlashMessageService))); }
    return this.__SolutionService_3;
  }
  createInternal():import1.SolutionModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._SolutionModule_1 = new import1.SolutionModule();
    return this._SolutionModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.SolutionModule)) { return this._SolutionModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    if ((token === import4.SolutionService)) { return this._SolutionService_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const SolutionModuleNgFactory:import0.NgModuleFactory<import1.SolutionModule> = new import0.NgModuleFactory(SolutionModuleInjector,import1.SolutionModule);